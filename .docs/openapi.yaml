openapi: 3.0.3
info:
  title: Bakku API
  description: |-
    바꾸 API 명세서
  contact:
    email: gustn4563@gmail.com
  license:
    name: MIT
    url: https://www.mit.edu/~amini/LICENSE.md
  version: 1.0.0
servers:
  - url: https://bakku-dev.duckdns.org/api/v1
tags:
  - name: auth
    description: 인증/인가 관련 api
  - name: event
    description: 행사 관련 api
  - name: ocean
    description: 바다 관련 api
paths:
  /auth/ping:
    get:
      tags:
        - auth
      summary: 현재 인증 상태를 확인합니다.
      description: header의 jwt토큰을 이용해서 서버에 정상적으로 인증/인가가 되는지 확인합니다.
      responses:
        "200":
          description: 보낸 jwt 토큰은 정상적으로 인증/인가 가능
          content:
            application/json:
              schema:
                type: object
                properties:
                  isLogin:
                    type: boolean
                example:
                  isLogin: true
        "401":
          description: jwt 토큰이 없거나 잘못된 경우입니다. 코드를 보고 어떤 예외인지 판단 할 수 있습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthExceptionResponse'
      security:
        - firebase_key: []
  /events:
    get:
      tags:
        - event
      summary: 여러개의 행사를 불러옵니다.
      description: 행사들을 Slice 형태로 불러옵니다.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'
      responses:
        "200":
          description: 데이터 반환 성공
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          oneOf:
                            - $ref: '#/components/schemas/EventResponse'
                  - $ref: '#/components/schemas/BasicPage'
        "204":
          description: 데이터 없음
      security:
        - firebase_key: []
  /events/{eventId}:
    get:
      tags:
        - event
      summary: 한개의 행사를 불러옵니다.
      description: ID를 통해서 해당하는 행사를 불러옵니다.
      parameters:
        - name: eventId
          in: path
          description: 찾고 싶은 행사 Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: 데이터 반환 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        "404":
          description: 해당하는 ID의 데이터 존재하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      security:
        - firebase_key: []
  /oceans:
    get:
      tags:
        - ocean
      summary: 현재 위치를 기반으로 가까운 바다들을 불러옵니다.
      description: 현재 위치(위도, 경도)를 파라미터로 보내서 가장 가까운 순의 바다를 불러옵니다.
      parameters:
        - name: lat
          in: query
          description: 현재 위도
          required: true
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
            example: 37.58122552547526
        - name: lon
          in: query
          description: 현재 경도
          required: false
          schema:
            type: number
            format: double
            example: 126.93754073973317
            minimum: -180
            maximum: 180
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'
      responses:
        "200":
          description: 데이터 반환 성공
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          oneOf:
                            - $ref: '#/components/schemas/OceanResponse'
                  - $ref: '#/components/schemas/BasicPage'
        "204":
          description: 데이터 없음
        "400":
          description: 파라미터 오류(위도와 경도 범위, 값 존재 유무)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      security:
        - firebase_key: []
  /oceans/{oceanId}:
    get:
      tags:
        - ocean
      summary: 한개의 바다를 불러옵니다.
      description: ID를 통해서 해당하는 바다를 불러옵니다.
      parameters:
        - name: oceanId
          in: path
          description: 찾고 싶은 바다 Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: 데이터 반환 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        "404":
          description: 해당하는 ID의 데이터 존재하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      security:
        - firebase_key: []
components:
  parameters:
    page:
      in: query
      name: page
      required: false
      description: 페이지 번호
      schema:
        type: integer
        default: 0
    size:
      in: query
      name: size
      required: false
      description: 반환할 요소의 개수
      schema:
        type: integer
        default: 5
    sort:
      in: query
      name: sort
      required: false
      description: 정렬 기준(ex - id,asc,name,desc) asc는 오름차순, desc는 내림차순을 의미합니다.
      schema:
        type: array
#        example: [id, asc]
  schemas:
    AuthExceptionResponse:
      type: object
      description: 인증/인가 관련한 오류가 일어날때 반환되는 응답입니다.
      properties:
        code:
          type: string
          example: 오류 코드
    ExceptionResponse:
      type: object
      description: 클라이언트가 요청한 부분이 서버측에서 오류가 나면 반환되는 응답
      properties:
        code:
          type: string
          example: 오류 코드
        detail:
          type: string
          example: 세부 정보
    BasicPage:
      type: object
      description: pageable은 클라이언트가 요청해서 지정한 값들이며 그 외의 요소들은 서버측 정보를 의미합니다.
      properties:
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                empty:
                  type: boolean
                  example: true
                  description: sort 요소가 비어있는지 여부
                sorted:
                  type: boolean
                  example: false
                  description: pageable sorting 여부
                unsorted:
                  type: boolean
                  example: true
                  description: pageable unsorting 여부
            offset:
              type: integer
              format: int32
              example: 5
              description: 가져올 데이터의 초기 위치값
            pageNumber:
              type: integer
              format: int32
              example: 0
              description: 요청한 페이지 번호
            pageSize:
              type: integer
              format: int32
              example: 5
              description: 반환 받고싶은 데이터 개수
            paged:
              type: boolean
              example: true
              description: 페이징 여부
            unpaged:
              type: boolean
              example: false
              description: 페이징이 안된 여부
        first:
          type: boolean
          example: true
          description: 첫번째 페이지 여부
        last:
          type: boolean
          example: false
          description: 마지막 페이지 여부(이 값을 통해서 무한 로딩을 중지시킬 것)
        size:
          type: integer
          format: int32
          example: 5
          description: 페이지 사이즈
        number:
          type: integer
          format: int32
          example: 1
          description: 페이지 번호
        sort:
          type: object
          properties:
            empty:
              type: boolean
              example: true
              description: sort 요소가 비어있는지 여부
            sorted:
              type: boolean
              example: false
              description: pageable로 sorting 여부
            unsorted:
              type: boolean
              example: true
              description: pageable로 unsorting 여부
        numberOfElements:
          type: integer
          format: int32
          example: 2
          description: 반환된 요소 값 개수
        empty:
          type: boolean
          example: false
          description: 데이터 없는 것에 대한 여부
    EventResponse:
      type: object
      description: 행사 응답
      properties:
        id:
          type: integer
          format: int64
          description: 행사 PK
          example: 1
        name:
          type: string
          description: 행사 이름
          example: 행사 이름
        startDate:
          type: string
          description: 행사 시작 시간
          example: 2023-02-27T20:44:28
        endDate:
          type: string
          description: 행사 종료 시간
          example: 2023-02-28T20:44:28
        comment:
          type: string
          description: 행사 내용
          example: 행사 내용
        latitude:
          type: number
          format: double
          default: 위도
          example: 37.58122552547526
        longitude:
          type: number
          format: double
          default: 경도
          example: 126.93754073973317
        imageUrl:
          type: string
          description: 행사 이미지 url
          example: https://blog.kakaocdn.net/dn/3ghE9/btq2RjJq0zF/skhqeIUWQca9a8VDiPW1Sk/img.png
        createdDate:
          type: string
          description: 행사 만든 시간
          example: 2023-02-27T20:44:28
        modifiedDate:
          type: string
          description: 행사 마지막 수정 시간
          example: 2023-02-27T20:44:28
    OceanResponse:
      type: object
      description: 바다 응답
      properties:
        id:
          type: integer
          format: int64
          description: 바다 PK
          example: 1
        name:
          type: string
          description: 바다 이름
          example: 바다 이름
        address:
          type: string
          description: 주소
          example: 경기도 김포시 중구로 93 어쩌고 저쩌고
        latitude:
          type: number
          format: double
          default: 위도
          example: 37.58122552547526
        longitude:
          type: number
          format: double
          default: 경도
          example: 126.93754073973317
        imageUrl:
          type: string
          description: 바다 이미지 url
          example: https://blog.kakaocdn.net/dn/3ghE9/btq2RjJq0zF/skhqeIUWQca9a8VDiPW1Sk/img.png
        createdDate:
          type: string
          description: 바다 만든 시간
          example: 2023-02-27T20:44:28
        modifiedDate:
          type: string
          description: 바다 마지막 수정 시간
          example: 2023-02-27T20:44:28
  securitySchemes:
    firebase_key:
      type: apiKey
      name: Authorization
      in: header
      description: |-
        Firebase Auth에서 발급받은 액세스토큰입니다.
        
        서버에 보낼때 'Bearer {토큰}' 형식으로 보내주세요.
